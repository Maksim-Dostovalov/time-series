data <- readxl::read_xls('WB_Russia.xls', sheet = 2)
data <- data.frame(data)
t(data)
data <- readxl::read_xls('WB_Russia.xls', sheet = 2)
data <- data.frame(data)
data <- readxl::read_xls('WB_Russia.xls', sheet = 2)
data <- data.frame(t(data))
data
data <- readxl::read_xls('WB_Russia.xls', sheet = 2)
data <- data.frame(t(data))
?data.frame
data <- readxl::read_xls('WB_Russia.xls', sheet = 2)
data <- data.frame(t(data), row.names = 1)
data <- readxl::read_xls('WB_Russia.xls', sheet = 2)
data <- data.frame(t(data), row.names = 0)
data <- readxl::read_xls('WB_Russia.xls', sheet = 2)
data <- data.frame(t(data), row.names = 'Indicator Code')
library (data.table)
data <- readxl::read_xls('WB_Russia.xls', sheet = 2)
#transpose data frame
df_t <- transpose(df)
df <- readxl::read_xls('WB_Russia.xls', sheet = 2)
#transpose data frame
df_t <- transpose(df)
#redefine row and column names
rownames(df_t) <- colnames(df)
colnames(df_t) <- rownames(df)
#display transposed data frame
df_t
library(data.table)
library(readxl)
df <- read_xls('WB_Russia.xls', sheet = 2)
#transpose data frame
df_t <- transpose(df)
#redefine row and column names
rownames(df_t) <- colnames(df)
colnames(df_t) <- rownames(df)
#display transposed data frame
df_t
?read_xls
df
df <- read_xls('WB_Russia.xls', sheet = 2)
#transpose data frame
df_t <- transpose(df)
#redefine row and column names
rownames(df_t) <- colnames(df)
colnames(df_t) <- rownames(df)
#display transposed data frame
df_t
df <- read_xls('WB_Russia.xls')
#transpose data frame
df_t <- transpose(df)
#redefine row and column names
rownames(df_t) <- colnames(df)
colnames(df_t) <- rownames(df)
#display transposed data frame
df_t
df <- read_xls('WB_Russia.xls')
df
library(data.table)
library(readxl)
df <- read_xls('WB_Russia.xls')
df
df <- read_xls('WB_Russia.xls')
df
df <- read_xls('WB_Russia.xls')
df
df <- read_xls('WB_Russia.xls')
df
df[:, 1]
df[[:, 1]]
df[1]
df[2]
df <- read_xls('WB_Russia.xls')
df[2]
df[0]
df[1]
library(openxlsx)
library(aTSA)
library(urca)
library(haven)
library(stats)
library(tseries)
library(forecast)
library(zoo)
library(xts)
library(pander)
library(lmtest)
library(car)
library(ggplot2)
tsdisplay(population)
library(openxlsx)
library(aTSA)
library(urca)
library(haven)
library(stats)
library(tseries)
library(forecast)
library(zoo)
library(xts)
library(pander)
library(lmtest)
library(car)
library(ggplot2)
data <- read_xls('WB_Russia.xls')
population <- data$SP.POP.TOTL
life_expectancy <- na.omit(data$SP.DYN.LE00.IN)
emissions <- na.omit(data$EN.ATM.CO2E.PC)
tsdisplay(population)
tsdisplay(life_expectancy)
tsdisplay(emissions)
summary(ur.df(population, type = c("trend"), lags = 0))
summary(ur.df(population, type = c("drift"), lags = 0))
summary(ur.df(life_expectancy, type = c("trend"), lags = 0))
summary(ur.df(life_expectancy, type = c("drift"), lags = 0))
summary(ur.df(emissions, type = c("trend"), lags = 0))
summary(ur.df(emissions, type = c("drift"), lags = 0))
stationary.test(population, method = "kpss")
stationary.test(life_expectancy, method = "kpss")
stationary.test(emissions, method = "kpss")
stationary.test(population, method = "pp")
stationary.test(life_expectancy, method = "pp")
stationary.test(emissions, method = "pp")
population_diff = diff(population)
summary(ur.df(population_diff, type = c("drift")))
library(openxlsx)
library(aTSA)
library(urca)
library(haven)
library(stats)
library(tseries)
library(forecast)
library(zoo)
library(xts)
library(pander)
library(lmtest)
library(car)
library(ggplot2)
data <- read_xls('WB_Russia.xls')
population <- data$SP.POP.TOTL
life_expectancy <- na.omit(data$SP.DYN.LE00.IN)
emissions <- na.omit(data$EN.ATM.CO2E.PC)
tsdisplay(population)
tsdisplay(life_expectancy)
tsdisplay(emissions)
summary(ur.df(population, type = c("trend"), lags = 0))
summary(ur.df(population, type = c("drift"), lags = 0))
summary(ur.df(life_expectancy, type = c("trend"), lags = 0))
summary(ur.df(life_expectancy, type = c("drift"), lags = 0))
summary(ur.df(emissions, type = c("trend"), lags = 0))
summary(ur.df(emissions, type = c("drift"), lags = 0))
stationary.test(population, method = "kpss")
stationary.test(life_expectancy, method = "kpss")
stationary.test(emissions, method = "kpss")
stationary.test(population, method = "pp")
stationary.test(life_expectancy, method = "pp")
stationary.test(emissions, method = "pp")
population_diff = diff(population)
summary(ur.df(population_diff, type = c("drift")))
life_expectancy_diff = diff(life_expectancy)
summary(ur.df(life_expectancy_diff, type = c("drift")))
emissions_diff = diff(life_expectancy)
summary(ur.df(emissions_diff, type = c("drift")))
stationary.test(population_diff, method = "kpss")
stationary.test(life_expectancy_diff, method = "kpss")
stationary.test(emissions_diff, method = "kpss")
stationary.test(population_diff, method = "pp")
stationary.test(life_expectancy_diff, method = "pp")
stationary.test(emissions_diff, method = "pp")
summary(ur.za(emissions, model = c("both")))
library(openxlsx)
library(aTSA)
library(urca)
library(haven)
library(stats)
library(tseries)
library(forecast)
library(zoo)
library(xts)
library(pander)
library(lmtest)
library(car)
library(ggplot2)
data <- read_xls('WB_Russia.xls')
population <- data$SP.POP.TOTL
life_expectancy <- na.omit(data$SP.DYN.LE00.IN)
emissions <- na.omit(data$EN.ATM.CO2E.PC)
tsdisplay(population)
tsdisplay(life_expectancy)
tsdisplay(emissions)
summary(ur.df(population, type = c("trend"), lags = 0))
summary(ur.df(population, type = c("drift"), lags = 0))
summary(ur.df(life_expectancy, type = c("trend"), lags = 0))
summary(ur.df(life_expectancy, type = c("drift"), lags = 0))
summary(ur.df(emissions, type = c("trend"), lags = 0))
summary(ur.df(emissions, type = c("drift"), lags = 0))
stationary.test(population, method = "kpss")
stationary.test(life_expectancy, method = "kpss")
stationary.test(emissions, method = "kpss")
stationary.test(population, method = "pp")
stationary.test(life_expectancy, method = "pp")
stationary.test(emissions, method = "pp")
population_diff = diff(population)
summary(ur.df(population_diff, type = c("drift")))
life_expectancy_diff = diff(life_expectancy)
summary(ur.df(life_expectancy_diff, type = c("drift")))
emissions_diff = diff(life_expectancy)
summary(ur.df(emissions_diff, type = c("drift")))
stationary.test(population_diff, method = "kpss")
stationary.test(life_expectancy_diff, method = "kpss")
stationary.test(emissions_diff, method = "kpss")
stationary.test(population_diff, method = "pp")
stationary.test(life_expectancy_diff, method = "pp")
stationary.test(emissions_diff, method = "pp")
summary(ur.za(emissions, model = c("both")))
library(openxlsx)
library(aTSA)
library(urca)
library(haven)
library(stats)
library(tseries)
library(forecast)
library(zoo)
library(xts)
library(pander)
library(lmtest)
library(car)
library(ggplot2)
data <- read_xls('WB_Russia.xls')
population <- data$SP.POP.TOTL
life_expectancy <- na.omit(data$SP.DYN.LE00.IN)
emissions <- na.omit(data$EN.ATM.CO2E.PC)
library(openxlsx)
library(aTSA)
library(urca)
library(haven)
library(stats)
library(tseries)
library(forecast)
library(zoo)
library(xts)
library(pander)
library(lmtest)
library(car)
library(ggplot2)
data <- read_xls('WB_Russia.xls')
population <- data$SP.POP.TOTL
life_expectancy <- na.omit(data$SP.DYN.LE00.IN)
emissions <- na.omit(data$EN.ATM.CO2E.PC)
tsdisplay(population)
tsdisplay(life_expectancy)
tsdisplay(emissions)
library(openxlsx)
library(aTSA)
library(urca)
library(haven)
library(stats)
library(tseries)
library(forecast)
library(zoo)
library(xts)
library(pander)
library(lmtest)
library(car)
library(ggplot2)
data <- read_xls('WB_Russia.xls')
population <- data$SP.POP.TOTL
life_expectancy <- na.omit(data$SP.DYN.LE00.IN)
emissions <- na.omit(data$EN.ATM.CO2E.PC)
tsdisplay(population)
tsdisplay(life_expectancy)
tsdisplay(emissions)
stationary.test(population, method = "adf")
stationary.test(life_expectancy, method = "adf")
stationary.test(emissions, method = "adf")
stationary.test(population, method = "kpss")
stationary.test(life_expectancy, method = "kpss")
stationary.test(emissions, method = "kpss")
stationary.test(population, method = "pp")
stationary.test(life_expectancy, method = "pp")
stationary.test(emissions, method = "pp")
population_diff = diff(population)
stationary.test(population_diff, method = "adf")
life_expectancy_diff = diff(life_expectancy)
stationary.test(life_expectancy_diff, method = "adf")
emissions_diff = diff(emissions)
stationary.test(emissions_diff, method = "adf")
stationary.test(population_diff, method = "kpss")
stationary.test(life_expectancy_diff, method = "kpss")
stationary.test(emissions_diff, method = "kpss")
stationary.test(population_diff, method = "pp")
stationary.test(life_expectancy_diff, method = "pp")
stationary.test(emissions_diff, method = "pp")
# install.packages('urca')
# install.packages('aTSA')
library(aTSA)
library(urca)
library(haven)
library(stats)
library(tseries)
#file.choose()
DF=read_dta("DF.dta") # укажите свой путь, где лежит файл
plot.ts(DF$y1, xlab="t")
summary(ur.df(DF$y1, type = c("drift"), lags = 0))
summary(ur.df(DF$y1, type = c("trend"), lags = 0))
summary(ur.df(DF$y1, type = c("drift"), lags = 1))
summary(ur.df(DF$y1, type = c("drift"), lags = 2))
summary(ur.df(DF$y1, type = c("drift")))
plot.ts(DF$y2, xlab="t")
summary(ur.df(DF$y2, type = c("trend")))
summary(ur.df(DF$y2, type = c("drift")))
summary(ur.df(DF$y2, type = c("none")))
d_y2 = diff(DF$y2)
summary(ur.df(d_y2, type = c("trend")))
plot.ts(DF$y21, xlab="t")
summary(ur.df(DF$y21, type = c("trend")))
summary(ur.df(DF$y21, type = c("drift")))
summary(ur.df(DF$y21, type = c("none")))
d_y21 = diff(DF$y21)
summary(ur.df(d_y21, type = c("trend")))
d2_y21 = diff(d_y21)
summary(ur.df(d2_y21, type = c("trend")))
plot.ts(DF$y3, xlab="t")
summary(ur.df(DF$y3, type = c("drift")))
summary(ur.df(DF$y3, type = c("trend")))
adf.test(DF$y1)
#stationary.test(DF$y1, method = "adf")
pp.test(DF$y1)
stationary.test(DF$y1, method = "pp")
kpss.test(DF$y1)
#stationary.test(DF$y1, method = "kpss")
plot.ts(DF$y4, xlab="t")
summary(ur.za(DF$y4, model = c("intercept")))
summary(ur.za(DF$y4, model = c("trend")))
summary(ur.za(DF$y4, model = c("both")))
library(openxlsx)
library(aTSA)
library(urca)
library(haven)
library(stats)
library(tseries)
library(forecast)
library(zoo)
library(xts)
library(pander)
library(lmtest)
library(car)
library(ggplot2)
data <- read_xls('WB_Russia.xls')
summary(ur.za(population, model = c("trend")))
summary(ur.za(population, model = c("both")))
summary(ur.za(population, model = c("trend")))
library(openxlsx)
library(aTSA)
library(urca)
library(haven)
library(stats)
library(tseries)
library(forecast)
library(zoo)
library(xts)
library(pander)
library(lmtest)
library(car)
library(ggplot2)
data <- read_xls('WB_Russia.xls')
library(openxlsx)
library(aTSA)
library(urca)
library(haven)
library(stats)
library(tseries)
library(forecast)
library(zoo)
library(xts)
library(pander)
library(lmtest)
library(car)
library(ggplot2)
data <- read_xls('WB_Russia.xls')
library(openxlsx)
library(aTSA)
library(urca)
library(haven)
library(stats)
library(tseries)
library(forecast)
library(zoo)
library(xts)
library(pander)
library(lmtest)
library(car)
library(ggplot2)
library(openxlsx)
library(aTSA)
library(urca)
library(haven)
library(stats)
library(tseries)
library(forecast)
library(zoo)
library(xts)
library(pander)
library(lmtest)
library(car)
library(ggplot2)
data <- read_xls('WB_Russia.xls')
library(openxlsx)
library(aTSA)
library(urca)
library(haven)
library(stats)
library(tseries)
library(forecast)
library(zoo)
library(xts)
library(pander)
library(lmtest)
library(car)
library(ggplot2)
data <- read_exel::read_xls('WB_Russia.xls')
data <- readxl::read_xls('WB_Russia.xls')
population <- data$SP.POP.TOTL
life_expectancy <- na.omit(data$SP.DYN.LE00.IN)
emissions <- na.omit(data$EN.ATM.CO2E.PC)
library(openxlsx)
library(aTSA)
library(urca)
library(haven)
library(stats)
library(tseries)
library(forecast)
library(zoo)
library(xts)
library(pander)
library(lmtest)
library(car)
library(ggplot2)
data <- readxl::read_xls('WB_Russia.xls')
population <- data$SP.POP.TOTL
life_expectancy <- na.omit(data$SP.DYN.LE00.IN)
emissions <- na.omit(data$EN.ATM.CO2E.PC)
tsdisplay(population)
tsdisplay(life_expectancy)
tsdisplay(emissions)
stationary.test(population, method = "adf")
stationary.test(life_expectancy, method = "adf")
stationary.test(emissions, method = "adf")
stationary.test(population, method = "kpss")
stationary.test(life_expectancy, method = "kpss")
stationary.test(emissions, method = "kpss")
stationary.test(population, method = "pp")
stationary.test(life_expectancy, method = "pp")
stationary.test(emissions, method = "pp")
population_diff = diff(population)
stationary.test(population_diff, method = "adf")
life_expectancy_diff = diff(life_expectancy)
stationary.test(life_expectancy_diff, method = "adf")
emissions_diff = diff(emissions)
stationary.test(emissions_diff, method = "adf")
stationary.test(population_diff, method = "kpss")
stationary.test(life_expectancy_diff, method = "kpss")
stationary.test(emissions_diff, method = "kpss")
stationary.test(population_diff, method = "pp")
stationary.test(life_expectancy, method = "adf")
stationary.test(life_expectancy_diff, method = "adf")
stationary.test(emissions_diff, method = "pp")
summary(ur.za(population, model = c("trend")))
library(openxlsx)
library(aTSA)
library(urca)
library(haven)
library(stats)
library(tseries)
library(forecast)
library(zoo)
library(xts)
library(pander)
library(lmtest)
library(car)
library(ggplot2)
data <- readxl::read_xls('WB_Russia.xls')
population <- data$SP.POP.TOTL
life_expectancy <- na.omit(data$SP.DYN.LE00.IN)
emissions <- na.omit(data$EN.ATM.CO2E.PC)
tsdisplay(population)
tsdisplay(life_expectancy)
tsdisplay(emissions)
stationary.test(population, method = "adf")
stationary.test(life_expectancy, method = "adf")
stationary.test(emissions, method = "adf")
stationary.test(population, method = "kpss")
stationary.test(life_expectancy, method = "kpss")
stationary.test(emissions, method = "kpss")
stationary.test(population, method = "pp")
stationary.test(life_expectancy, method = "pp")
stationary.test(emissions, method = "pp")
population_diff = diff(population)
stationary.test(population_diff, method = "adf")
life_expectancy_diff = diff(life_expectancy)
stationary.test(life_expectancy_diff, method = "adf")
emissions_diff = diff(emissions)
stationary.test(emissions_diff, method = "adf")
stationary.test(population_diff, method = "kpss")
stationary.test(life_expectancy_diff, method = "kpss")
stationary.test(emissions_diff, method = "kpss")
stationary.test(population_diff, method = "pp")
stationary.test(life_expectancy_diff, method = "pp")
stationary.test(emissions_diff, method = "pp")
summary(ur.za(population, model = c("trend")))
stationary.test(life_expectancy, method = "adf")
stationary.test(life_expectancy_diff, method = "adf")
