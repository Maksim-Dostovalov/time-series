install.packages('urca')
install.packages('aTSA')
install.packages('openxlsx')
install.packages('forecast')
install.packages('zoo')
install.packages('xts')
install.packages('pander')
library(openxlsx)
library(aTSA)
library(urca)
library(haven)
library(stats)
library(tseries)
library(forecast)
library(zoo) # временные ряды
library(xts) # временные ряды
library(pander) # красивые таблицы
library(lmtest) # тесты
library(car) # тесты
# install.packages('urca')
# install.packages('aTSA')
# install.packages('openxlsx')
# install.packages('forecast')
# install.packages('zoo')
# install.packages('xts')
# install.packages('pander')
library(openxlsx)
library(aTSA)
library(urca)
library(haven)
library(stats)
library(tseries)
library(forecast)
library(zoo) # временные ряды
library(xts) # временные ряды
library(pander) # красивые таблицы
library(lmtest) # тесты
library(car) # тесты
# install.packages('urca')
# install.packages('aTSA')
# install.packages('openxlsx')
# install.packages('forecast')
# install.packages('zoo')
# install.packages('xts')
# install.packages('pander')
install.packages('car')
library(openxlsx)
library(aTSA)
library(urca)
library(haven)
library(stats)
library(tseries)
library(forecast)
library(zoo) # временные ряды
library(xts) # временные ряды
library(pander) # красивые таблицы
library(lmtest) # тесты
library(car) # тесты
library(ggplot2)
# install.packages('urca')
# install.packages('aTSA')
# install.packages('openxlsx')
# install.packages('forecast')
# install.packages('zoo')
# install.packages('xts')
# install.packages('pander')
# install.packages('car')
library(openxlsx)
library(aTSA)
library(urca)
library(haven)
library(stats)
library(tseries)
library(forecast)
library(zoo) # временные ряды
library(xts) # временные ряды
library(pander) # красивые таблицы
library(lmtest) # тесты
library(car) # тесты
library(ggplot2)
#file.choose()
df <- read.xlsx('Mortality.xlsx') # укажите свой путь, где лежит файл
# install.packages('urca')
# install.packages('aTSA')
# install.packages('openxlsx')
# install.packages('forecast')
# install.packages('zoo')
# install.packages('xts')
# install.packages('pander')
# install.packages('car')
library(openxlsx)
library(aTSA)
library(urca)
library(haven)
library(stats)
library(tseries)
library(forecast)
library(zoo) # временные ряды
library(xts) # временные ряды
library(pander) # красивые таблицы
library(lmtest) # тесты
library(car) # тесты
library(ggplot2)
#file.choose()
df <- read.xlsx('Mortality.xlsx') # укажите свой путь, где лежит файл
#file.choose()
DF=read_dta("DF.dta") # укажите свой путь, где лежит файл
tsdisplay(df$Russia)
summary(ur.df(df$Russia, type = c("trend"), lags = 0))
summary(ur.df(df$Russia, type = c("drift"), lags = 0))
d_Russia = diff(df$Russia)
summary(ur.df(d_Russia, type = c("drift"), lags = 0))
m1 <- Arima(df$Russia, order=c(1,1,0))
#m1 <- Arima(df$Russia, order=c(1,1,0), include.constant=TRUE) # модель с константой
summary(m1)
m2 <- Arima(df$Russia, order=c(0,1,1))
summary(m2)
m3 <- Arima(df$Russia, order=c(1,1,1))
summary(m3)
#m4 <- Arima(df$Russia, order=c(1,1,0), xreg=df$t)
m4 <- Arima(df$Russia, order=c(1,1,0), include.drift=TRUE)
summary(m4)
m5 <- Arima(df$Russia, order=c(2,1,1))
summary(m5)
e1 <- m1$residuals
tsdisplay(e1)
pander(shapiro.test(e1)) # Тест Шапиро-Уилка на нормальность остатков (Н0: нормальное распределение)
pander(Box.test(e1,lag=10, type="Lj")) # Тест Льюинга-Бокса на автокорреляцию (Н0: автокорреляции нет)
e2 <- m2$residuals
tsdisplay(e2)
pander(shapiro.test(e2)) # Тест Шапиро-Уилка на нормальность остатков (Н0: нормальное распределение)
pander(Box.test(e2,lag=10, type="Lj")) # Тест Льюинга-Бокса на автокорреляцию (Н0: автокорреляции нет)
e3 <- m3$residuals
tsdisplay(e3)
pander(shapiro.test(e3)) # Тест Шапиро-Уилка на нормальность остатков (Н0: нормальное распределение)
pander(Box.test(e3,lag=10, type="Lj")) # Тест Льюинга-Бокса на автокорреляцию (Н0: автокорреляции нет)
e4 <- m4$residuals
tsdisplay(e4)
pander(shapiro.test(e4)) # Тест Шапиро-Уилка на нормальность остатков (Н0: нормальное распределение)
pander(Box.test(e4,lag=10, type="Lj")) # Тест Льюинга-Бокса на автокорреляцию (Н0: автокорреляции нет)
e5 <- m5$residuals
tsdisplay(e5)
pander(shapiro.test(e5)) # Тест Шапиро-Уилка на нормальность остатков (Н0: нормальное распределение)
pander(Box.test(e5,lag=10, type="Lj")) # Тест Льюинга-Бокса на автокорреляцию (Н0: автокорреляции нет)
pred1=fitted(m1)
ggplot(data=df, aes(Year, Russia))+
geom_line(colour = 'blue')+
geom_line(aes(Year, pred1), colour = 'red', size = 0.5)
prognoz1 <- forecast(m1, h=6)
prognoz1
plot(prognoz1)
pred4=fitted(m4)
ggplot(data=df, aes(Year, Russia))+
geom_line(colour = 'blue')+
geom_line(aes(Year, pred4), colour = 'red', size = 0.5)
